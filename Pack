import java.io.*;
import java.util.Random;
import java.util.Scanner;
import java.io.File;  // Import the File class
import java.io.FileNotFoundException;  // Import this class to handle errors

public class Pack {
    public String packname;
    public Card[] GameDeck;
    public Integer playerNum;

    public Pack(String filename, int playerNumber) {
        this.packname = filename;
        this.playerNum = playerNumber;
        this.GameDeck = new Card[playerNum*8];
    }

    public void fileCheck(String fileName, int playerCount) throws IOException {
        File myObj = new File(fileName + ".txt");
        if (myObj.exists()) {
            System.out.println("File found");
            readPack(fileName);
        } else {
            System.out.println("File created: " + myObj.getName());
            writePack(playerCount);
        }
    }

    public Card[] shuffleArray(int n) {
        int cardNum = 8 * n;
        int decknum = 2 * n;
        Card[] packArray = new Card[cardNum];
        int arraySection = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 1; j < decknum + 1; j++) {
                packArray[arraySection] = new Card(j);
                arraySection++;
            }
        }
        for (int i = 0; i < packArray.length; i++) {
            System.out.println(packArray[i].getIndexValue());
        }
        Random rand = new Random();
        for (int i = 0; i < packArray.length; i++) {
            int randomIndexToSwap = rand.nextInt(packArray.length);
            Card temp = packArray[randomIndexToSwap];
            packArray[randomIndexToSwap] = packArray[i];
            packArray[i] = temp;
        }
        return packArray;
    }


    public void writePack(int n) throws IOException {
        try {
            FileWriter writePack = new FileWriter(packname + ".txt");
            BufferedWriter bw = new BufferedWriter(writePack);
            Card[] pack = shuffleArray(n);
            for (int i = 0; i < pack.length; i++) {
                int a = pack[i].getIndexValue();
                bw.write(String.valueOf(a));
                bw.newLine();
            }
            bw.close();
            writePack.close();

            System.out.println("Successfully wrote to the file.");
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }

    public void readPack(String filenameRead) {
        try {
            File packFile = new File(filenameRead + ".txt");
            BufferedReader br = new BufferedReader(new FileReader(packFile));
            String st;
            int count = 0;
            while ((st = br.readLine()) != null) {
                GameDeck[count] = new Card(Integer.parseInt(st));
                count++;
            }
        } catch (IOException e) {
            e.printStackTrace();

        }
        for (int i = 0; i < GameDeck.length; i++) {
            System.out.print(GameDeck[i].getIndexValue());
            System.out.print(",");
        }


        }
}

